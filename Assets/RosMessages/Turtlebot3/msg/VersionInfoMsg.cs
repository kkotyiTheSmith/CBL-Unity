//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Turtlebot3
{
    [Serializable]
    public class VersionInfoMsg : Message
    {
        public const string k_RosMessageName = "turtlebot3_msgs/VersionInfo";
        public override string RosMessageName => k_RosMessageName;

        // #######################################
        //  Messages
        // #######################################
        public string hardware;
        //  <yyyy>.<mm>.<dd>        : hardware version of Turtlebot3 (ex. 2017.05.23)
        public string firmware;
        //  <major>.<minor>.<patch> : firmware version of OpenCR
        public string software;
        //  <major>.<minor>.<patch> : software version of Turtlebot3 ROS packages

        public VersionInfoMsg()
        {
            this.hardware = "";
            this.firmware = "";
            this.software = "";
        }

        public VersionInfoMsg(string hardware, string firmware, string software)
        {
            this.hardware = hardware;
            this.firmware = firmware;
            this.software = software;
        }

        public static VersionInfoMsg Deserialize(MessageDeserializer deserializer) => new VersionInfoMsg(deserializer);

        private VersionInfoMsg(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.hardware);
            deserializer.Read(out this.firmware);
            deserializer.Read(out this.software);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.hardware);
            serializer.Write(this.firmware);
            serializer.Write(this.software);
        }

        public override string ToString()
        {
            return "VersionInfoMsg: " +
            "\nhardware: " + hardware.ToString() +
            "\nfirmware: " + firmware.ToString() +
            "\nsoftware: " + software.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
